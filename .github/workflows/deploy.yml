name: Deploy to AWS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1

      - name: Build and push Docker images
        run: |
          docker-compose build
          docker tag demo-ci_backend:latest ${{ steps.login-ecr.outputs.registry }}/backend:${{ github.sha }}
          docker tag demo-ci_frontend:latest ${{ steps.login-ecr.outputs.registry }}/frontend:${{ github.sha }}
          docker push ${{ steps.login-ecr.outputs.registry }}/backend:${{ github.sha }}
          docker push ${{ steps.login-ecr.outputs.registry }}/frontend:${{ github.sha }}    

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Initialize
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Apply
        working-directory: ./terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform apply -auto-approve -var="docker_image_backend=${{ steps.login-ecr.outputs.registry }}/backend:${{ github.sha }}" -var="docker_image_frontend=${{ steps.login-ecr.outputs.registry }}/frontend:${{ github.sha }}"

